--// CONFIGURATION //--
local KeyToToggleAimlock = Enum.KeyCode.Q -- Key to toggle aimlock
local LockDistance = 100 -- Max distance to detect targets
local Accuracy = 0.1 -- Accuracy setting (lower is more accurate, higher is more loose)
local Smoothing = 0.3 -- Smoothing for aim transition (0 = instant, 1 = very smooth)
local LockType = "Closest" -- Lock type: "Closest" or "Selected"
local TargetPart = "Head" -- Default target part: "Head", "Torso", "HumanoidRootPart", etc.
local LockMode = "Mouse" -- Lock mode: "Mouse" or "Camera"

--// Kavo UI Setup //--
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Aimlock System", "DarkTheme")

local Tab = Window:NewTab("Settings")
local Section = Tab:NewSection("Aimlock Controls")

--// UI Controls //--
Section:NewButton("Toggle Aimlock", "Activate or Deactivate Aimlock", function()
    AimlockEnabled = not AimlockEnabled
    if AimlockEnabled then
        print("Aimlock Activated!")
    else
        print("Aimlock Deactivated!")
    end
end)

Section:NewSlider("Accuracy", "Set the accuracy of Aimlock", 0, 1, Accuracy, function(value)
    Accuracy = value
    print("Accuracy set to: " .. tostring(value))
end)

Section:NewSlider("Smoothing", "Set the smoothing for the transition", 0, 1, Smoothing, function(value)
    Smoothing = value
    print("Smoothing set to: " .. tostring(value))
end)

Section:NewDropdown("Lock Type", "Choose the type of target to lock onto", {"Closest", "Selected"}, function(option)
    LockType = option
    print("Lock type set to: " .. option)
end)

Section:NewDropdown("Lock Mode", "Choose between Mouse or Camera lock", {"Mouse", "Camera"}, function(option)
    LockMode = option
    print("Lock mode set to: " .. option)
end)

Section:NewDropdown("Target Part", "Choose the part of the body to aim at", {"Head", "Torso", "HumanoidRootPart"}, function(option)
    TargetPart = option
    print("Target part set to: " .. option)
end)

--// Variables //--
local AimlockEnabled = false
local SelectedTarget = nil -- This will be used if the "Selected" lock type is chosen
local Mouse = game.Players.LocalPlayer:GetMouse()

--// Target Lock Functions //--

-- Function to get the closest target
local function GetClosestTarget()
    local closestTarget = nil
    local shortestDistance = LockDistance
    for _, target in pairs(game.Workspace:GetChildren()) do
        if target:IsA("Model") and target:FindFirstChild("Humanoid") then
            local part = target:FindFirstChild(TargetPart)
            if part then
                local distance = (part.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                if distance < shortestDistance then
                    closestTarget = part
                    shortestDistance = distance
                end
            end
        end
    end
    return closestTarget
end

-- Function to lock the mouse position to the target part
local function LockMouseToTarget(target)
    if target then
        local targetPosition = target.Position
        Mouse.Hit = CFrame.new(targetPosition)
    end
end

-- Function to smoothly move the camera towards the target part
local function SmoothCameraMove(target)
    if target then
        local targetPosition = target.Position
        local camera = game.Workspace.CurrentCamera
        local cameraPosition = camera.CFrame.Position
        local direction = (targetPosition - cameraPosition).Unit
        local newCFrame = CFrame.new(cameraPosition, cameraPosition + direction)
        game.Workspace.CurrentCamera.CFrame = camera.CFrame:Lerp(newCFrame, Smoothing)
    end
end

--// Smooth Aiming Function //--
local function SmoothAim(currentPosition, targetPosition, smoothingFactor)
    return currentPosition:Lerp(targetPosition, smoothingFactor)
end

--// Aimlock Logic //--
game:GetService("RunService").RenderStepped:Connect(function()
    if AimlockEnabled then
        local targetToLock = nil
        
        -- Choose target based on LockType
        if LockType == "Closest" then
            targetToLock = GetClosestTarget()
        elseif LockType == "Selected" then
            targetToLock = SelectedTarget
        end

        -- If a target is found, aim at it
        if targetToLock then
            if LockMode == "Mouse" then
                LockMouseToTarget(targetToLock)
            elseif LockMode == "Camera" then
                SmoothCameraMove(targetToLock)
            end
        end
    end
end)

--// User Input for Selecting a Target (If Needed) //--
game:GetService("UserInputService").InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 and LockType == "Selected" then
        local mouse = game.Players.LocalPlayer:GetMouse()
        local hit = mouse.Hit.p
        -- Find the closest NPC or player when clicked to lock as "Selected"
        local closestTarget = GetClosestTarget()
        if closestTarget then
            SelectedTarget = closestTarget
            print("Target selected: " .. tostring(closestTarget))
        end
    end
end)

--// Toggle Aimlock Key Bind //--
game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == KeyToToggleAimlock then
        AimlockEnabled = not AimlockEnabled
        if AimlockEnabled then
            print("Aimlock Activated!")
        else
            print("Aimlock Deactivated!")
        end
    end
end)
